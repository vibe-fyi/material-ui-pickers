{"version":3,"file":"TimePicker.js","sources":["../../src/TimePicker/TimePicker.tsx"],"sourcesContent":["import { useUtils } from '../_shared/hooks/useUtils';\r\nimport { TimePickerToolbar } from './TimePickerToolbar';\r\nimport { PureDateInput } from '../_shared/PureDateInput';\r\nimport { KeyboardDateInput } from '../_shared/KeyboardDateInput';\r\nimport { timePickerDefaultProps } from '../constants/prop-types';\r\nimport { usePickerState } from '../_shared/hooks/usePickerState';\r\nimport { pick12hOr24hFormat } from '../_helpers/text-field-helper';\r\nimport { useKeyboardPickerState } from '../_shared/hooks/useKeyboardPickerState';\r\nimport {\r\n  WithKeyboardInputProps,\r\n  makePickerWithState,\r\n  WithPureInputProps,\r\n} from '../Picker/makePickerWithState';\r\n\r\ntype TimePickerView = 'hours' | 'minutes' | 'seconds';\r\n\r\nexport interface BaseTimePickerProps {\r\n  /**\r\n   * 12h/24h view for hour selection clock\r\n   * @default true\r\n   */\r\n  ampm?: boolean;\r\n  /**\r\n   * Step over minutes\r\n   * @default 1\r\n   */\r\n  minutesStep?: number;\r\n}\r\n\r\nexport interface TimePickerViewsProps extends BaseTimePickerProps {\r\n  /** Array of views to show */\r\n  views?: ('hours' | 'minutes' | 'seconds')[];\r\n  /** First view to show in timepicker */\r\n  openTo?: 'hours' | 'minutes' | 'seconds';\r\n}\r\n\r\nexport type TimePickerProps = WithPureInputProps & TimePickerViewsProps;\r\n\r\nexport type KeyboardTimePickerProps = WithKeyboardInputProps & TimePickerViewsProps;\r\n\r\nconst defaultProps = {\r\n  ...timePickerDefaultProps,\r\n  openTo: 'hours' as TimePickerView,\r\n  views: ['hours', 'minutes'] as TimePickerView[],\r\n};\r\n\r\nfunction useOptions(props: TimePickerProps | KeyboardTimePickerProps) {\r\n  const utils = useUtils();\r\n\r\n  return {\r\n    getDefaultFormat: () =>\r\n      pick12hOr24hFormat(props.format, props.ampm, {\r\n        '12h': utils.time12hFormat,\r\n        '24h': utils.time24hFormat,\r\n      }),\r\n  };\r\n}\r\n\r\nexport const TimePicker = makePickerWithState<TimePickerProps>({\r\n  useOptions,\r\n  Input: PureDateInput,\r\n  useState: usePickerState,\r\n  DefaultToolbarComponent: TimePickerToolbar,\r\n});\r\n\r\nexport const KeyboardTimePicker = makePickerWithState<KeyboardTimePickerProps>({\r\n  useOptions,\r\n  Input: KeyboardDateInput,\r\n  useState: useKeyboardPickerState,\r\n  DefaultToolbarComponent: TimePickerToolbar,\r\n  getCustomProps: props => ({\r\n    refuse: props.ampm ? /[^\\dap]+/gi : /[^\\d]+/gi,\r\n  }),\r\n});\r\n\r\nTimePicker.defaultProps = defaultProps;\r\n\r\nKeyboardTimePicker.defaultProps = defaultProps;\r\n"],"names":["defaultProps","timePickerDefaultProps","openTo","views","useOptions","props","utils","useUtils","getDefaultFormat","pick12hOr24hFormat","format","ampm","time12hFormat","time24hFormat","TimePicker","makePickerWithState","Input","PureDateInput","useState","usePickerState","DefaultToolbarComponent","TimePickerToolbar","KeyboardTimePicker","KeyboardDateInput","useKeyboardPickerState","getCustomProps","refuse"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,IAAMA,YAAY,qBACbC,sBADa;EAEhBC,MAAM,EAAE,OAFQ;EAGhBC,KAAK,EAAE,CAAC,OAAD,EAAU,SAAV;EAHT;;AAMA,SAASC,UAAT,CAAoBC,KAApB,EAAsE;MAC9DC,KAAK,GAAGC,QAAQ,EAAtB;SAEO;IACLC,gBAAgB,EAAE;aAChBC,kBAAkB,CAACJ,KAAK,CAACK,MAAP,EAAeL,KAAK,CAACM,IAArB,EAA2B;eACpCL,KAAK,CAACM,aAD8B;eAEpCN,KAAK,CAACO;OAFG,CADF;;GADpB;;;AASF,IAAaC,UAAU,GAAGC,mBAAmB,CAAkB;EAC7DX,UAAU,EAAVA,UAD6D;EAE7DY,KAAK,EAAEC,aAFsD;EAG7DC,QAAQ,EAAEC,cAHmD;EAI7DC,uBAAuB,EAAEC;CAJkB,CAAtC;AAOP,IAAaC,kBAAkB,GAAGP,mBAAmB,CAA0B;EAC7EX,UAAU,EAAVA,UAD6E;EAE7EY,KAAK,EAAEO,iBAFsE;EAG7EL,QAAQ,EAAEM,sBAHmE;EAI7EJ,uBAAuB,EAAEC,iBAJoD;EAK7EI,cAAc,EAAE,wBAAApB,KAAK;WAAK;MACxBqB,MAAM,EAAErB,KAAK,CAACM,IAAN,GAAa,YAAb,GAA4B;KADjB;;CAL8B,CAA9C;AAUPG,UAAU,CAACd,YAAX,GAA0BA,YAA1B;AAEAsB,kBAAkB,CAACtB,YAAnB,GAAkCA,YAAlC;;;;"}